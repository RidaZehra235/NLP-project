{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"16GWZi9K_L8ipdvnRC0uC62XqtYCuizwB","authorship_tag":"ABX9TyOCaGHA9xDq28+TtW74lxX4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"4b34c0a41366441cbbebcc7b53a56d59":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_079de5c6f5c24a13876fee3e5d75a996","IPY_MODEL_4f67f91cbd424d81b6c4039463e62d26","IPY_MODEL_bd8062729d8a4719af66e347ca774c48"],"layout":"IPY_MODEL_59bfcb4a934341a28bdfcbcd7d9a82c0"}},"079de5c6f5c24a13876fee3e5d75a996":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_38400e9b535c4a6a810c4a4c98dcfc91","placeholder":"​","style":"IPY_MODEL_015db6f497694b6b8a3a2d3e3376039c","value":"Downloading (…)okenizer_config.json: 100%"}},"4f67f91cbd424d81b6c4039463e62d26":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_2bfe1e079f2a467ba73edf246a6a64ea","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_75473a183b944e58964f4d0e6d767132","value":28}},"bd8062729d8a4719af66e347ca774c48":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3a68a8b684444e94ae6b125382182220","placeholder":"​","style":"IPY_MODEL_28ecaa1df36b4d219b835094c59f0250","value":" 28.0/28.0 [00:00&lt;00:00, 1.13kB/s]"}},"59bfcb4a934341a28bdfcbcd7d9a82c0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"38400e9b535c4a6a810c4a4c98dcfc91":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"015db6f497694b6b8a3a2d3e3376039c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2bfe1e079f2a467ba73edf246a6a64ea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"75473a183b944e58964f4d0e6d767132":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3a68a8b684444e94ae6b125382182220":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"28ecaa1df36b4d219b835094c59f0250":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"78e413e6af45413683df6284b2f839ff":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_791206f6e6e14ae8814151071a486eb2","IPY_MODEL_52daf71090184116b7e04b4632c4baa5","IPY_MODEL_fcb4a1aa318249e0bbf2c42849b54468"],"layout":"IPY_MODEL_99a1b4ec78c84e17885b9fdb9b528bdc"}},"791206f6e6e14ae8814151071a486eb2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d3c02daadc464a639d2f17a66a44a1e2","placeholder":"​","style":"IPY_MODEL_7f50988fb70641ea9b0677f5b8b653b5","value":"Downloading (…)solve/main/vocab.txt: 100%"}},"52daf71090184116b7e04b4632c4baa5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_aa88e30468c345c48e7a6e0d996b8d3e","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_59198eb71ff347ddbcac0c2a67d9355a","value":231508}},"fcb4a1aa318249e0bbf2c42849b54468":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ed10353f21f34f2289a1a2c2ee33e0cf","placeholder":"​","style":"IPY_MODEL_c9ff5f7ec10346a2b361808c853f5d08","value":" 232k/232k [00:00&lt;00:00, 5.03MB/s]"}},"99a1b4ec78c84e17885b9fdb9b528bdc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d3c02daadc464a639d2f17a66a44a1e2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7f50988fb70641ea9b0677f5b8b653b5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"aa88e30468c345c48e7a6e0d996b8d3e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"59198eb71ff347ddbcac0c2a67d9355a":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ed10353f21f34f2289a1a2c2ee33e0cf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c9ff5f7ec10346a2b361808c853f5d08":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e76bb7acd3244cf684c7c84a0e624bbd":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b690932966cc4a8394330a62edbe647e","IPY_MODEL_293452f15e9d44f18bf533e8c34e3835","IPY_MODEL_496529989ac24803994a681e42137d85"],"layout":"IPY_MODEL_fe7e8f7d5609421ca9b3e527124dce39"}},"b690932966cc4a8394330a62edbe647e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_578abbfd0e574330800175df98bd50c2","placeholder":"​","style":"IPY_MODEL_e1805f2416a644cfac6f758f51da7774","value":"Downloading (…)/main/tokenizer.json: 100%"}},"293452f15e9d44f18bf533e8c34e3835":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d13553131b0340c19ba3a867608d50b6","max":466062,"min":0,"orientation":"horizontal","style":"IPY_MODEL_92c2d609fb2b42b1b4498c6c61e95506","value":466062}},"496529989ac24803994a681e42137d85":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1d04d0f056334b539206f6cfbd3ec41a","placeholder":"​","style":"IPY_MODEL_4b53b1846e9b4809accc6a7c6e4d6408","value":" 466k/466k [00:00&lt;00:00, 19.4MB/s]"}},"fe7e8f7d5609421ca9b3e527124dce39":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"578abbfd0e574330800175df98bd50c2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e1805f2416a644cfac6f758f51da7774":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d13553131b0340c19ba3a867608d50b6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"92c2d609fb2b42b1b4498c6c61e95506":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1d04d0f056334b539206f6cfbd3ec41a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4b53b1846e9b4809accc6a7c6e4d6408":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6f5142e57dec4aa3981d90dd310fb4dd":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_07bd1d0ef1db44b08bc17737425471d4","IPY_MODEL_311bbc686c90403e945e22371132477a","IPY_MODEL_f83f0164eb434c298035b62adde8e7b1"],"layout":"IPY_MODEL_a6ad401e4ace4d2f9d5e532c8adc47ca"}},"07bd1d0ef1db44b08bc17737425471d4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f19e91bcb252410c98280d4e205108d2","placeholder":"​","style":"IPY_MODEL_e01cac8153f84c62b5c24ff63f1fafa7","value":"Downloading (…)lve/main/config.json: 100%"}},"311bbc686c90403e945e22371132477a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_35f1212d214a41ecb40696a96d08ce3a","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_bfb44e28b6114232adb473c7ad784663","value":570}},"f83f0164eb434c298035b62adde8e7b1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1dd0e3c78fbd469b96d51f73ea4edb72","placeholder":"​","style":"IPY_MODEL_1dad8801e6cd47009f0f9612728f14c9","value":" 570/570 [00:00&lt;00:00, 17.9kB/s]"}},"a6ad401e4ace4d2f9d5e532c8adc47ca":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f19e91bcb252410c98280d4e205108d2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e01cac8153f84c62b5c24ff63f1fafa7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"35f1212d214a41ecb40696a96d08ce3a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bfb44e28b6114232adb473c7ad784663":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1dd0e3c78fbd469b96d51f73ea4edb72":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1dad8801e6cd47009f0f9612728f14c9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9a3ca48f8e4d416ab80da44dbabe5342":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c63cfbbefd16469393d5c840854340ae","IPY_MODEL_e341844fb72f44e19c665bf6e3cf3a53","IPY_MODEL_d382d1be58d2480da1a6c6cf07579227"],"layout":"IPY_MODEL_330c5047db024fc8834329ba23e108af"}},"c63cfbbefd16469393d5c840854340ae":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_273b8d35ff524b5a917f6a30d3d1779f","placeholder":"​","style":"IPY_MODEL_687e56ca4a2b4bee95b82c05974ac9a1","value":"Downloading model.safetensors: 100%"}},"e341844fb72f44e19c665bf6e3cf3a53":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_232d66f00c4f43e199dacbf74d380c42","max":440449768,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f46f4b390894415c907dbeec99903284","value":440449768}},"d382d1be58d2480da1a6c6cf07579227":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5f754359fcf34f69b82c389753d23364","placeholder":"​","style":"IPY_MODEL_b6cf071b1e114a1dad94684578b981ce","value":" 440M/440M [00:04&lt;00:00, 68.6MB/s]"}},"330c5047db024fc8834329ba23e108af":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"273b8d35ff524b5a917f6a30d3d1779f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"687e56ca4a2b4bee95b82c05974ac9a1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"232d66f00c4f43e199dacbf74d380c42":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f46f4b390894415c907dbeec99903284":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5f754359fcf34f69b82c389753d23364":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b6cf071b1e114a1dad94684578b981ce":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e63e5ccf44f9464098c924e2458a05d7":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8bde7c0bf8b54286abecf05a1899208d","IPY_MODEL_02588b85f80a4e778df5cb865c9477e3","IPY_MODEL_a7ab9fb987a24fac98d25aa5b37e04ca"],"layout":"IPY_MODEL_b806acd08e0e4356ad7bcc8873f0a72d"}},"8bde7c0bf8b54286abecf05a1899208d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_46543df4992b4319a22ab890bc4c6ea8","placeholder":"​","style":"IPY_MODEL_655e3d001fbf44608ef3a4993ea21216","value":"Downloading (…)olve/main/vocab.json: 100%"}},"02588b85f80a4e778df5cb865c9477e3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_cd90dd51ff544cdc9651af9e4ce74927","max":1042301,"min":0,"orientation":"horizontal","style":"IPY_MODEL_950db1911a9f48acbb84c30176d86ab5","value":1042301}},"a7ab9fb987a24fac98d25aa5b37e04ca":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b36e7a24dcc34cb3a11cee11bfeb6d80","placeholder":"​","style":"IPY_MODEL_0c0ba6872d1f44bfa19b634d080ebd52","value":" 1.04M/1.04M [00:00&lt;00:00, 4.36MB/s]"}},"b806acd08e0e4356ad7bcc8873f0a72d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"46543df4992b4319a22ab890bc4c6ea8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"655e3d001fbf44608ef3a4993ea21216":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cd90dd51ff544cdc9651af9e4ce74927":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"950db1911a9f48acbb84c30176d86ab5":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b36e7a24dcc34cb3a11cee11bfeb6d80":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0c0ba6872d1f44bfa19b634d080ebd52":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"be365b719e26443fab901246e476dcaf":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_38505f3ae8cd41959ebd3f8245d0ca3a","IPY_MODEL_5de38c559d8248ecb99a84909927261c","IPY_MODEL_ee969e27da03468694133a0c24ebb837"],"layout":"IPY_MODEL_ce44ac22669743b0bc5bcb2115efc7c3"}},"38505f3ae8cd41959ebd3f8245d0ca3a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7121478315364514a6adb3909ee76abb","placeholder":"​","style":"IPY_MODEL_d1674a57d0ca4b0a81f3748ff5add171","value":"Downloading (…)olve/main/merges.txt: 100%"}},"5de38c559d8248ecb99a84909927261c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e41d452cbcbc4bf99b8d0a01227e2c15","max":456318,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d9d64c3b7e054451be5fadbd32d0540e","value":456318}},"ee969e27da03468694133a0c24ebb837":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cc7f5db1e0a54127b5815033cc1bc992","placeholder":"​","style":"IPY_MODEL_32344eacda2549c49e2328815dce8bb5","value":" 456k/456k [00:00&lt;00:00, 10.4MB/s]"}},"ce44ac22669743b0bc5bcb2115efc7c3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7121478315364514a6adb3909ee76abb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d1674a57d0ca4b0a81f3748ff5add171":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e41d452cbcbc4bf99b8d0a01227e2c15":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d9d64c3b7e054451be5fadbd32d0540e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"cc7f5db1e0a54127b5815033cc1bc992":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"32344eacda2549c49e2328815dce8bb5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"11587ea7793e4d65b74a0a0ff5be90e9":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_9245859e5c3f4580a92c61fc927a6560","IPY_MODEL_8cfda3de32d3408590fbe1c5250b971b","IPY_MODEL_b0414dc0f8cd404c984830654bdcb532"],"layout":"IPY_MODEL_522b6d89dec74682894a403d809604cc"}},"9245859e5c3f4580a92c61fc927a6560":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_498fce73e6a240fc927982e8bcc8af38","placeholder":"​","style":"IPY_MODEL_c42f38096dec4a41a50f180ea9f7fb8a","value":"Downloading (…)/main/tokenizer.json: 100%"}},"8cfda3de32d3408590fbe1c5250b971b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5612920f1d2e4a8c97acb6bbd6ed4490","max":1355256,"min":0,"orientation":"horizontal","style":"IPY_MODEL_7b9e366caff94fe89cdd8cc47a93d924","value":1355256}},"b0414dc0f8cd404c984830654bdcb532":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c026e61d9d824a6184b7590247232054","placeholder":"​","style":"IPY_MODEL_a122dc499be948a5ba94707c8a2c4e56","value":" 1.36M/1.36M [00:00&lt;00:00, 19.8MB/s]"}},"522b6d89dec74682894a403d809604cc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"498fce73e6a240fc927982e8bcc8af38":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c42f38096dec4a41a50f180ea9f7fb8a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5612920f1d2e4a8c97acb6bbd6ed4490":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7b9e366caff94fe89cdd8cc47a93d924":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c026e61d9d824a6184b7590247232054":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a122dc499be948a5ba94707c8a2c4e56":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"22bc6c826bc3479aa9f54381e450e9ac":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a0556cd1931c418ba0ce5b2865766ff3","IPY_MODEL_e6540346d3f14df2b93c645826216aae","IPY_MODEL_623f6fdeb7e645debc92011866e9daa8"],"layout":"IPY_MODEL_5d99c1e2d43f4224b6cb4c13517daaf2"}},"a0556cd1931c418ba0ce5b2865766ff3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9a51ea57cfc04816887e83d69ef97b40","placeholder":"​","style":"IPY_MODEL_d0dc044189da4cd59482d553b47f4a35","value":"Downloading (…)lve/main/config.json: 100%"}},"e6540346d3f14df2b93c645826216aae":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5315a3ce5627441bbfb2b65e359d7bf6","max":665,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e333333e016e4e65b2e59f982dbade93","value":665}},"623f6fdeb7e645debc92011866e9daa8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3e68956902494036b9cee8452ef5ea2b","placeholder":"​","style":"IPY_MODEL_ac0f0b8213954bb5878d2e3bd65ac468","value":" 665/665 [00:00&lt;00:00, 16.9kB/s]"}},"5d99c1e2d43f4224b6cb4c13517daaf2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9a51ea57cfc04816887e83d69ef97b40":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d0dc044189da4cd59482d553b47f4a35":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5315a3ce5627441bbfb2b65e359d7bf6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e333333e016e4e65b2e59f982dbade93":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3e68956902494036b9cee8452ef5ea2b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ac0f0b8213954bb5878d2e3bd65ac468":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"67d36e64e1974916ba27194d6601d598":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a39deda31ab44c4bb8e87ff36d28bdc9","IPY_MODEL_3b64efb50c4041e989d1e59a407772eb","IPY_MODEL_bcbc9523fdfd43509e154f59e16acfdd"],"layout":"IPY_MODEL_f5f5e752fc5b4db7b4658b0b5fb48a0f"}},"a39deda31ab44c4bb8e87ff36d28bdc9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fe7baeb17654475d9e2a97704e46b8d3","placeholder":"​","style":"IPY_MODEL_ca584ef3f42e49be9dbe69ab562a6a41","value":"Downloading model.safetensors: 100%"}},"3b64efb50c4041e989d1e59a407772eb":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_28e643db2be941c0a07932b497986951","max":548105171,"min":0,"orientation":"horizontal","style":"IPY_MODEL_32c3da73206a4956bb0aa64f1b797a29","value":548105171}},"bcbc9523fdfd43509e154f59e16acfdd":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_783e27a488cf4093ba787fac77a0d357","placeholder":"​","style":"IPY_MODEL_818c3e7410a04d089496a1fbf809cf26","value":" 548M/548M [00:07&lt;00:00, 148MB/s]"}},"f5f5e752fc5b4db7b4658b0b5fb48a0f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fe7baeb17654475d9e2a97704e46b8d3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ca584ef3f42e49be9dbe69ab562a6a41":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"28e643db2be941c0a07932b497986951":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"32c3da73206a4956bb0aa64f1b797a29":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"783e27a488cf4093ba787fac77a0d357":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"818c3e7410a04d089496a1fbf809cf26":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"54dba006d0d740e19973748753794993":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_63cdb891f6db4037826773263f71ad17","IPY_MODEL_1e4c845c32864464a425f29302908e0f","IPY_MODEL_0860af99591d4d36a94a6bf0be7103b5"],"layout":"IPY_MODEL_1402dca26fa247ae94418eb6a333a064"}},"63cdb891f6db4037826773263f71ad17":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c53c7938a6ea4e2d837b8de1c58eee61","placeholder":"​","style":"IPY_MODEL_2bc1855365f34ce084a2e2b43878662b","value":"Downloading (…)neration_config.json: 100%"}},"1e4c845c32864464a425f29302908e0f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_a258152669984fbb8a0a98495c9ee76c","max":124,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5649162a1be04e9bbe5b02cd0b6a7cab","value":124}},"0860af99591d4d36a94a6bf0be7103b5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_606a46f66e8740f2880e11ea040fb523","placeholder":"​","style":"IPY_MODEL_9e34bb0e99074722beccddd9735447f0","value":" 124/124 [00:00&lt;00:00, 2.69kB/s]"}},"1402dca26fa247ae94418eb6a333a064":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c53c7938a6ea4e2d837b8de1c58eee61":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2bc1855365f34ce084a2e2b43878662b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a258152669984fbb8a0a98495c9ee76c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5649162a1be04e9bbe5b02cd0b6a7cab":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"606a46f66e8740f2880e11ea040fb523":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9e34bb0e99074722beccddd9735447f0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I_FKKiOzplZ0","executionInfo":{"status":"ok","timestamp":1697962391139,"user_tz":-300,"elapsed":19347,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"a06120f3-cc2d-49af-da93-6bf49aef2299"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'Topical-Chat'...\n","remote: Enumerating objects: 262, done.\u001b[K\n","remote: Counting objects: 100% (65/65), done.\u001b[K\n","remote: Compressing objects: 100% (58/58), done.\u001b[K\n","remote: Total 262 (delta 26), reused 15 (delta 3), pack-reused 197\u001b[K\n","Receiving objects: 100% (262/262), 96.25 MiB | 17.08 MiB/s, done.\n","Resolving deltas: 100% (134/134), done.\n","Updating files: 100% (119/119), done.\n"]}],"source":["!git clone https://github.com/alexa/Topical-Chat.git\n"]},{"cell_type":"code","source":["!pip install tensorflow  # For NLP and machine learning\n","!pip install transformers  # For pre-trained language models\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gL917E01rdz-","executionInfo":{"status":"ok","timestamp":1697962414311,"user_tz":-300,"elapsed":23184,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"980ec851-6d0e-4253-cf77-8b7a18de8698"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: tensorflow in /usr/local/lib/python3.10/dist-packages (2.13.0)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.4.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.6.3)\n","Requirement already satisfied: flatbuffers>=23.1.21 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (23.5.26)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.4.0)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.2.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.59.0)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.9.0)\n","Requirement already satisfied: keras<2.14,>=2.13.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.13.1)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (16.0.6)\n","Requirement already satisfied: numpy<=1.24.3,>=1.22 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.23.5)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.3.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from tensorflow) (23.2)\n","Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.20.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow) (67.7.2)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.16.0)\n","Requirement already satisfied: tensorboard<2.14,>=2.13 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.13.0)\n","Requirement already satisfied: tensorflow-estimator<2.14,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.13.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.3.0)\n","Requirement already satisfied: typing-extensions<4.6.0,>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (4.5.0)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.15.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.34.0)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow) (0.41.2)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (2.17.3)\n","Requirement already satisfied: google-auth-oauthlib<1.1,>=0.5 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (1.0.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (3.5)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (2.31.0)\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (0.7.1)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.14,>=2.13->tensorflow) (3.0.0)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow) (5.3.1)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow) (0.3.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib<1.1,>=0.5->tensorboard<2.14,>=2.13->tensorflow) (1.3.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow) (3.3.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.14,>=2.13->tensorflow) (2023.7.22)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from werkzeug>=1.0.1->tensorboard<2.14,>=2.13->tensorflow) (2.1.3)\n","Requirement already satisfied: pyasn1<0.6.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.14,>=2.13->tensorflow) (0.5.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<1.1,>=0.5->tensorboard<2.14,>=2.13->tensorflow) (3.2.2)\n","Collecting transformers\n","  Downloading transformers-4.34.1-py3-none-any.whl (7.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.7/7.7 MB\u001b[0m \u001b[31m47.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.12.4)\n","Collecting huggingface-hub<1.0,>=0.16.4 (from transformers)\n","  Downloading huggingface_hub-0.18.0-py3-none-any.whl (301 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m302.0/302.0 kB\u001b[0m \u001b[31m29.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.23.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (23.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2023.6.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.31.0)\n","Collecting tokenizers<0.15,>=0.14 (from transformers)\n","  Downloading tokenizers-0.14.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.8/3.8 MB\u001b[0m \u001b[31m71.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting safetensors>=0.3.1 (from transformers)\n","  Downloading safetensors-0.4.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.3/1.3 MB\u001b[0m \u001b[31m50.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.1)\n","Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (2023.6.0)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (4.5.0)\n","Collecting huggingface-hub<1.0,>=0.16.4 (from transformers)\n","  Downloading huggingface_hub-0.17.3-py3-none-any.whl (295 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m295.0/295.0 kB\u001b[0m \u001b[31m22.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.3.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2023.7.22)\n","Installing collected packages: safetensors, huggingface-hub, tokenizers, transformers\n","Successfully installed huggingface-hub-0.17.3 safetensors-0.4.0 tokenizers-0.14.1 transformers-4.34.1\n"]}]},{"cell_type":"code","source":["!pip install transformers\n","from transformers import GPT2LMHeadModel, GPT2Tokenizer\n","import torch\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z71U87l1qVOk","executionInfo":{"status":"ok","timestamp":1697963430344,"user_tz":-300,"elapsed":13674,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"cdcf9c4a-3d1d-4b21-8e6f-ae3a16cf9146"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.34.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.12.4)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.17.3)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.23.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (23.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2023.6.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.31.0)\n","Requirement already satisfied: tokenizers<0.15,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.14.1)\n","Requirement already satisfied: safetensors>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.0)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.1)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (2023.6.0)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (4.5.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.3.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2023.7.22)\n"]}]},{"cell_type":"code","source":["import json\n","train_dataset_path=\"/content/Topical-Chat/conversations/train.json\"\n","test_dataset_path=\"/content/Topical-Chat/conversations/test_freq.json\"\n","valid_dataset_path=\"/content/Topical-Chat/conversations/valid_freq.json\"\n"],"metadata":{"id":"iSTH1q-5qVcJ","executionInfo":{"status":"ok","timestamp":1697963441717,"user_tz":-300,"elapsed":384,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["import json\n","import random\n","import nltk\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","nltk.download('averaged_perceptron_tagger')\n","nltk.download('maxent_ne_chunker')\n","nltk.download('words')\n","random.seed(92)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cOl32J2av7we","executionInfo":{"status":"ok","timestamp":1697963455326,"user_tz":-300,"elapsed":8255,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"a160f6a1-e3ba-4791-ffe4-1401f6ec00ad"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package averaged_perceptron_tagger to\n","[nltk_data]     /root/nltk_data...\n","[nltk_data]   Unzipping taggers/averaged_perceptron_tagger.zip.\n","[nltk_data] Downloading package maxent_ne_chunker to\n","[nltk_data]     /root/nltk_data...\n","[nltk_data]   Unzipping chunkers/maxent_ne_chunker.zip.\n","[nltk_data] Downloading package words to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/words.zip.\n"]}]},{"cell_type":"code","source":["import json\n","import pandas as pd\n","\n","\n","# Load dataset from json file\n","with open ('/content/Topical-Chat/conversations/train.json','r') as json_file:\n","  data =json.load(json_file)\n","\n","# Initialize lists to store input and target pairs\n","input_texts = []\n","target_texts = []\n","\n","current_conversation = None\n","previous_message = None\n","\n","for conversation_id, conversation in data.items():\n","    for message in conversation[\"content\"]:\n","        agent = message[\"agent\"]\n","        message = message[\"message\"]\n","\n","        # Check if the current message is from \"agent_1\"\n","        if agent == \"agent_1\":\n","            if previous_message is not None:\n","                # Pair the previous message from \"agent_2\" as input and the current message from \"agent_1\" as target\n","                input_texts.append(previous_message)\n","                target_texts.append(message)\n","            previous_message = message"],"metadata":{"id":"fsdiNT6Bi-wn","executionInfo":{"status":"ok","timestamp":1697963469456,"user_tz":-300,"elapsed":3359,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["from transformers import BertTokenizer, BertForSequenceClassification\n","\n","model_name = 'bert-base-uncased'\n","tokenizer = BertTokenizer.from_pretrained(model_name)\n","model = BertForSequenceClassification.from_pretrained(model_name, num_labels=2)  # Adjust num_labels based on your task\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":372,"referenced_widgets":["4b34c0a41366441cbbebcc7b53a56d59","079de5c6f5c24a13876fee3e5d75a996","4f67f91cbd424d81b6c4039463e62d26","bd8062729d8a4719af66e347ca774c48","59bfcb4a934341a28bdfcbcd7d9a82c0","38400e9b535c4a6a810c4a4c98dcfc91","015db6f497694b6b8a3a2d3e3376039c","2bfe1e079f2a467ba73edf246a6a64ea","75473a183b944e58964f4d0e6d767132","3a68a8b684444e94ae6b125382182220","28ecaa1df36b4d219b835094c59f0250","78e413e6af45413683df6284b2f839ff","791206f6e6e14ae8814151071a486eb2","52daf71090184116b7e04b4632c4baa5","fcb4a1aa318249e0bbf2c42849b54468","99a1b4ec78c84e17885b9fdb9b528bdc","d3c02daadc464a639d2f17a66a44a1e2","7f50988fb70641ea9b0677f5b8b653b5","aa88e30468c345c48e7a6e0d996b8d3e","59198eb71ff347ddbcac0c2a67d9355a","ed10353f21f34f2289a1a2c2ee33e0cf","c9ff5f7ec10346a2b361808c853f5d08","e76bb7acd3244cf684c7c84a0e624bbd","b690932966cc4a8394330a62edbe647e","293452f15e9d44f18bf533e8c34e3835","496529989ac24803994a681e42137d85","fe7e8f7d5609421ca9b3e527124dce39","578abbfd0e574330800175df98bd50c2","e1805f2416a644cfac6f758f51da7774","d13553131b0340c19ba3a867608d50b6","92c2d609fb2b42b1b4498c6c61e95506","1d04d0f056334b539206f6cfbd3ec41a","4b53b1846e9b4809accc6a7c6e4d6408","6f5142e57dec4aa3981d90dd310fb4dd","07bd1d0ef1db44b08bc17737425471d4","311bbc686c90403e945e22371132477a","f83f0164eb434c298035b62adde8e7b1","a6ad401e4ace4d2f9d5e532c8adc47ca","f19e91bcb252410c98280d4e205108d2","e01cac8153f84c62b5c24ff63f1fafa7","35f1212d214a41ecb40696a96d08ce3a","bfb44e28b6114232adb473c7ad784663","1dd0e3c78fbd469b96d51f73ea4edb72","1dad8801e6cd47009f0f9612728f14c9","9a3ca48f8e4d416ab80da44dbabe5342","c63cfbbefd16469393d5c840854340ae","e341844fb72f44e19c665bf6e3cf3a53","d382d1be58d2480da1a6c6cf07579227","330c5047db024fc8834329ba23e108af","273b8d35ff524b5a917f6a30d3d1779f","687e56ca4a2b4bee95b82c05974ac9a1","232d66f00c4f43e199dacbf74d380c42","f46f4b390894415c907dbeec99903284","5f754359fcf34f69b82c389753d23364","b6cf071b1e114a1dad94684578b981ce"]},"id":"uIavC7QXdke3","executionInfo":{"status":"ok","timestamp":1697963485945,"user_tz":-300,"elapsed":8170,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"eea7b7dc-8315-4672-b2e3-557fe9abdca9"},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading (…)okenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4b34c0a41366441cbbebcc7b53a56d59"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)solve/main/vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"78e413e6af45413683df6284b2f839ff"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)/main/tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e76bb7acd3244cf684c7c84a0e624bbd"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)lve/main/config.json:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6f5142e57dec4aa3981d90dd310fb4dd"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading model.safetensors:   0%|          | 0.00/440M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9a3ca48f8e4d416ab80da44dbabe5342"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"S0ziKPvwhBzF"}},{"cell_type":"markdown","source":[],"metadata":{"id":"PxosZuB6hE8Z"}},{"cell_type":"code","source":["import json\n","\n","# Load the JSON data\n","with open('/content/Topical-Chat/conversations/train.json', 'r') as file:\n","    data = json.load(file)\n","import json\n","\n","# Print a few samples\n","num_samples_to_print = 5  # You can change this number to print more or fewer samples\n","\n","# Iterate through the keys (assuming each key represents a sample)\n","for i, key in enumerate(data.keys()):\n","    if i >= num_samples_to_print:\n","        break\n","\n","    sample = data[key]\n","    print(f\"Sample {i + 1} (Key: {key}):\")\n","    print(json.dumps(sample, indent=4))  # Pretty-print the JSON data with indentation\n","    print(\"\\n\" + \"=\" * 40 + \"\\n\")  # Separator between samples\n","\n"],"metadata":{"id":"Rjvb3GsPz66I","executionInfo":{"status":"ok","timestamp":1697963671474,"user_tz":-300,"elapsed":2704,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"592e5b53-b097-40af-8909-d49007260703"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample 1 (Key: t_bde29ce2-4153-4056-9eb7-f4ad710505fe):\n","{\n","    \"article_url\": \"https://www.washingtonpost.com/blogs/compost/wp/2018/04/05/endangered-species-are-the-real-threats/\",\n","    \"config\": \"C\",\n","    \"content\": [\n","        {\n","            \"message\": \"Are you a fan of Google or Microsoft?\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Both are excellent technology they are helpful in many ways. For the security purpose both are super.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I'm not  a huge fan of Google, but I use it a lot because I have to. I think they are a monopoly in some sense. \",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Google provides online related services and products, which includes online ads, search engine and cloud computing.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah, their services are good. I'm just not a fan of intrusive they can be on our personal lives. \",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Google is leading the alphabet subsidiary and will continue to be the Umbrella company for Alphabet internet interest.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Did you know Google had hundreds of live goats to cut the grass in the past? \\n\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"It is very interesting. Google provide \\\"Chrome OS\\\" which is a light weight OS. Google provided a lot of hardware mainly in 2010 to 2015. \",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I like Google Chrome. Do you use it as well for your browser? \",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Yes.Google is the biggest search engine and Google service figure out top 100 website, including Youtube and Blogger.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"By the way, do you like Fish? \",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Yes. They form a sister group of tourniquets- they make the sea water clean and remove the dust from it. Fish is the biggest part in the eco-system.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Did you know that a seahorse is the only fish to have a neck? \",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Freshwater fish only drink water through the skin via Osmosis, Saltwater fish drink water through the mouth. Dolphins are friendly to human beings.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Happy\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Interesting, they also have gills. Did you know that jellyfish are immortal? \",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Yes. Fish is the important resources of human world wide for the commercial and subsistence fish hunts the fish in the wild fisheries.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"What about cats, do you like cats? I'm a dog fan myself. \",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"The cat is referred as domestic cat and wild cat. They make our world very clean from rats! \",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah, cats can be cool, but they sure do spend a lot of their time sleeping. \",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Cats hear the sounds too faint or too high frequency human ears can hear. \",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I heard that too. Well, it was nice chatting with you. Have a good day. \",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        }\n","    ],\n","    \"conversation_rating\": {\n","        \"agent_1\": \"Excellent\",\n","        \"agent_2\": \"Excellent\"\n","    }\n","}\n","\n","========================================\n","\n","Sample 2 (Key: t_1abc9c37-387d-4013-8691-88ef8c010e58):\n","{\n","    \"article_url\": \"https://www.washingtonpost.com/entertainment/theater_dance/womens-voices-notes-an-exotic-imogen-and-a-down-home-hound/2018/01/21/559a4ad0-feb2-11e7-bb03-722769454f82_story.html\",\n","    \"config\": \"B\",\n","    \"content\": [\n","        {\n","            \"message\": \"do you like dance?\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes  I do. Did you know Bruce Lee was a cha cha dancer?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes he even won a hardcore cha cha championship in 1958\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah. Did you know Tupac was a ballet dancer?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes and he even was in the production of the nutcracker\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah. Ballet dancer go through 4 pairs of shoes a week\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes that is a lot of shoes and also a lot of money\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah true. Did you know babies are really good at dancing?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes and they smile more when they hit the beat\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah they are much smarter than we give them credit for\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"True Did you know Jackson had a patent on a dancing device?\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes it helped him smooth out his dance moves\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Nice. Do you like Shakespeare?\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes I do. Do you know that he popularized many phrases\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes like good riddance, in my heart of hearts and such\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes and then he also invented names like Jessica, Olivia and Miranda\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes. And for his works you have to use old english for it to make sense\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes otherwise the rhymes and puns do not seem to work out\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes. He lived at the same time as Pocahontas too\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I wonder if they met how that would go from there\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah interesting point. Nice chat\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"Personal Knowledge\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        }\n","    ],\n","    \"conversation_rating\": {\n","        \"agent_1\": \"Excellent\",\n","        \"agent_2\": \"Excellent\"\n","    }\n","}\n","\n","========================================\n","\n","Sample 3 (Key: t_1a600621-5ad4-409c-a812-bc0b2bb03aa6):\n","{\n","    \"article_url\": \"https://www.washingtonpost.com/blogs/compost/wp/2018/04/05/endangered-species-are-the-real-threats/\",\n","    \"config\": \"C\",\n","    \"content\": [\n","        {\n","            \"message\": \"Hey what's up do use Google very often?I really love the company and was surprised to hear that it was founded back in 1998.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"i think everyone must use it daily! its become ingrained in every day life\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Agreed. The Google headquarters in Mountain View California is nicknamed the Google Plex.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"thats funny. The current CEO is Sundar Pichai, i didnt know Larry Page was replaced\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Oh yeah I didn't know that either. I also want to go to google Plex to see the goats who mow their lawn by eating it.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"say what now?? they have that??\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Yeah apparently lol! They do that instead of hiring people to mow!\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Happy\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"thats both funny and i guess imaginative. leave it to a huge tech company to employ actual goats!\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah exactly I am sure they are cheaper. One thing I bet they couldn't exploit is fish. I think fish are so cool there is actually a breed of jellyfish that is immortal.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"i had rememered hearing about that before. Immortatlity is wasted on a jellyfish haha. did you know a seahorse is the only fish that has an actual neck?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"That is so funny I guess I never considered a seahorse a fish. The black swallower fish sounds a lot like a snake because it can eat pray that is so large.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"i guess they live up to their name then!\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"It seems they do. I also didn't know that there was a difference with how freshwater and saltwater fish drink.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"thats crazy. i wonder why fresh water ones only use osmosis? \",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah and saltwater fish are lucky because they can do that and drink through their mouth's.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"seems like fresh water fish got the short end of the stick with that one. Have you ever been to a cat cafe?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I have never been to a cat cafe no, what about you? Seems like they are popular in Japan and Taiwan.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"no but I would love to! paying hourly to hang out with adorable cats? im in!\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Happy\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah that would be a lot of fun. I didn't realize that cats sleep so much. Must be nice.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"i guess thats where the phrase \\\"cat nap\\\" comes from\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Happy\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Oh yeah I guess so ha ha. There's even a town in Alaska that has a mayor cat.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS3\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        }\n","    ],\n","    \"conversation_rating\": {\n","        \"agent_1\": \"Excellent\",\n","        \"agent_2\": \"Excellent\"\n","    }\n","}\n","\n","========================================\n","\n","Sample 4 (Key: t_01269680-99c3-4ab4-9df3-23901e0623c9):\n","{\n","    \"article_url\": \"https://www.washingtonpost.com/entertainment/theater_dance/womens-voices-notes-an-exotic-imogen-and-a-down-home-hound/2018/01/21/559a4ad0-feb2-11e7-bb03-722769454f82_story.html\",\n","    \"config\": \"C\",\n","    \"content\": [\n","        {\n","            \"message\": \"Hi!  do you like to dance?\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS1\",\n","                \"Personal Knowledge\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"I love to dance a lot. How about you?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Happy\",\n","            \"knowledge_source\": [\n","                \"Personal Knowledge\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I am really bad, but it is a good time.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Dancing is a lot of fun. Did you know that Bruce Lee was a great dancer?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Happy\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I heard that, winning Cha Cha championships and everything!\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Yes that is amazing. He won the Hong Kong cha-cha championship back in 1958 in fact.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I always just thought of him as a martial arts legend.  Now he is a dance legend of sorts too!\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"Yeah!! That is correct. He was a fantastic martial artist. Did you know that Tupac danced ballet in high school?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah!  He was the mouse king in the Nutcracker.  Thats pretty cool, I would definitely never have guessed that about him.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Neither did I. That is insane because Tupac was a famous rapper. \",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"He was indeed, his music is even in the library of congress.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"Personal Knowledge\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I didn't know this thanks for sharing.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"Personal Knowledge\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Sure thing!  Did you hear about Michael Jackson's special patent shoes?\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"No. I know that Michael Jackson was a fantastic dancer but can you tell me more about his patent shoes if you don't mind.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"There was a specific device in his shoes that helped with his extreme lean in some dance moves.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Wow!!! That is amazing coming from such a talented singer and dancer. I couldn't even dance like that even if I dreamed of it.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Me neither. I could never be a professional dancer.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Good\"\n","        },\n","        {\n","            \"message\": \"I heard that some professional ballet dancer can go through four pairs of shoes in a week.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"That is crazy!  That can't be cheap for them.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Surprised\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"No. I think its very expensive for them to be professional ballet dancers based on this.\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"Personal Knowledge\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"It has been great chatting but I must go!  Gotta go get my Bruce Lee on, the martial arts part...  definitely not the dance.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Ha Ha!!! It was so nice chatting with you as well!! Have a nice day!!! Bye\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Happy\",\n","            \"knowledge_source\": [\n","                \"Personal Knowledge\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Bye\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Neutral\",\n","            \"knowledge_source\": [\n","                \"Personal Knowledge\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        }\n","    ],\n","    \"conversation_rating\": {\n","        \"agent_1\": \"Excellent\",\n","        \"agent_2\": \"Excellent\"\n","    }\n","}\n","\n","========================================\n","\n","Sample 5 (Key: t_c4f84350-a9e8-4928-bde8-5193b62388e0):\n","{\n","    \"article_url\": \"https://www.washingtonpost.com/entertainment/theater_dance/womens-voices-notes-an-exotic-imogen-and-a-down-home-hound/2018/01/21/559a4ad0-feb2-11e7-bb03-722769454f82_story.html\",\n","    \"config\": \"B\",\n","    \"content\": [\n","        {\n","            \"message\": \"do you like dance?\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I love it. Did you know Bruce Lee was a dancer?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes he even won a cha cha championship in 1958\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah. Did you know ballet dancers use a lot of shoes?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes they go through 4 pairs in a single week\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah that is a lot of shoes and also a lot of money\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah. Babies are also really good at dancing when they hear music\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes and they smile more when they hit the beat\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah pretty cute. Did you know Tupac was a ballet dancer?\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes he was in the nutcracker as the mouse king\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS1\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah. DO you like SHakespeare?\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I love his work. Did you know he popularized many terms that we use to this day?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes terms like, good riddance, in my heart of heart and such\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes. He lives at the same time as Pocahontas did\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"I wonder if they had met what he would have written about her.\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah good point. He also invented some women's names\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes among those are Olivia, Miranda and Jessica\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah. Did you know that his works have to stick to the old english language to make sense?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes especially with punk and rhymes, they do not work with modern language\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yeah. Did you know Tchaikozsky donated his skull in hopes it will be used in Shakespeare's plays?\",\n","            \"agent\": \"agent_2\",\n","            \"sentiment\": \"Curious to dive deeper\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        },\n","        {\n","            \"message\": \"Yes and did get used so that is good. Nice chat\",\n","            \"agent\": \"agent_1\",\n","            \"sentiment\": \"Happy\",\n","            \"knowledge_source\": [\n","                \"FS2\"\n","            ],\n","            \"turn_rating\": \"Excellent\"\n","        }\n","    ],\n","    \"conversation_rating\": {\n","        \"agent_1\": \"Excellent\",\n","        \"agent_2\": \"Excellent\"\n","    }\n","}\n","\n","========================================\n","\n"]}]},{"cell_type":"code","source":["import json\n","import pandas as pd\n","\n","# Load the JSON data\n","with open('/content/Topical-Chat/conversations/train.json', 'r') as File:\n","    data = json.load(File)\n","\n","# Initialize empty lists to store questions and answers\n","Questions = []\n","Answers = []\n","\n","# Iterate through the data and extract questions and answers\n","for key, sample in data.items():\n","    agent1_messages = [msg['message'][0] for msg in sample['content'] if msg['agent'] == 'agent_1']\n","    agent2_messages = [msg['message'][0] for msg in sample['content'] if msg['agent'] == 'agent_2']\n","\n","    # Ensure that both lists have the same length\n","    min_length = min(len(agent1_messages), len(agent2_messages))\n","    agent1_messages = agent1_messages[:min_length]\n","    agent2_messages = agent2_messages[:min_length]\n","\n","    # Append questions and answers to the respective lists\n","    Questions.extend(agent1_messages)\n","    Answers.extend(agent2_messages)\n","\n","# Create a DataFrame\n","df = pd.DataFrame({'questions': Questions, 'answers': Answers})\n","\n","# Print the first few rows of the DataFrame\n","print(df.head())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iZbCa6_xhuQh","executionInfo":{"status":"ok","timestamp":1697964121194,"user_tz":-300,"elapsed":2454,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"4a41a6b0-3360-4105-882a-75ebc6bd4323"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["  questions answers\n","0         A       B\n","1         I       G\n","2         Y       G\n","3         D       I\n","4         I       Y\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"AdhgM8C3iFSt","executionInfo":{"status":"ok","timestamp":1697964427387,"user_tz":-300,"elapsed":712,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"5fba6e15-1d6f-402b-f367-ee2caebf5b20"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      questions answers  question_Length  answer_Length  question_length  \\\n","0             A       B                1              1                1   \n","1             I       G                1              1                1   \n","2             Y       G                1              1                1   \n","3             D       I                1              1                1   \n","4             I       Y                1              1                1   \n","...         ...     ...              ...            ...              ...   \n","91169         I       I                1              1                1   \n","91170         I       T                1              1                1   \n","91171         I       I                1              1                1   \n","91172         W       I                1              1                1   \n","91173         I       I                1              1                1   \n","\n","       answer_length  \n","0                  1  \n","1                  1  \n","2                  1  \n","3                  1  \n","4                  1  \n","...              ...  \n","91169              1  \n","91170              1  \n","91171              1  \n","91172              1  \n","91173              1  \n","\n","[91174 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-5e5608bd-28f5-47d0-9908-3a86c75157d5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>questions</th>\n","      <th>answers</th>\n","      <th>question_Length</th>\n","      <th>answer_Length</th>\n","      <th>question_length</th>\n","      <th>answer_length</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A</td>\n","      <td>B</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>I</td>\n","      <td>G</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Y</td>\n","      <td>G</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>D</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>I</td>\n","      <td>Y</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>91169</th>\n","      <td>I</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91170</th>\n","      <td>I</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91171</th>\n","      <td>I</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91172</th>\n","      <td>W</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91173</th>\n","      <td>I</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>91174 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e5608bd-28f5-47d0-9908-3a86c75157d5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5e5608bd-28f5-47d0-9908-3a86c75157d5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5e5608bd-28f5-47d0-9908-3a86c75157d5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a2097791-207b-4822-b106-f5ec54d0b01f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a2097791-207b-4822-b106-f5ec54d0b01f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a2097791-207b-4822-b106-f5ec54d0b01f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["print(df.describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XQJnroxriKjm","executionInfo":{"status":"ok","timestamp":1697964431584,"user_tz":-300,"elapsed":10,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"549495a7-4f5a-4cb7-8d37-5e7191a376f2"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["       question_Length  answer_Length  question_length  answer_length\n","count          91174.0        91174.0          91174.0        91174.0\n","mean               1.0            1.0              1.0            1.0\n","std                0.0            0.0              0.0            0.0\n","min                1.0            1.0              1.0            1.0\n","25%                1.0            1.0              1.0            1.0\n","50%                1.0            1.0              1.0            1.0\n","75%                1.0            1.0              1.0            1.0\n","max                1.0            1.0              1.0            1.0\n"]}]},{"cell_type":"code","source":["print(df.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KQI50jNviT5C","executionInfo":{"status":"ok","timestamp":1697964143340,"user_tz":-300,"elapsed":362,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"6957a17f-df4d-4a30-fa0c-520c17284935"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["questions    0\n","answers      0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","\n","# Distribution of question and answer lengths\n","df['question_length'] = df['questions'].apply(len)\n","df['answer_length'] = df['answers'].apply(len)\n","\n","# Distribution plots for question and answer lengths\n","plt.figure(figsize=(12, 6))\n","plt.subplot(1, 2, 1)\n","sns.histplot(df['question_length'], bins=30, kde=True)\n","plt.title('Distribution of question lengths')\n","\n","plt.subplot(1, 2, 2)\n","sns.histplot(df['answer_length'], bins=30, kde=True)\n","plt.title('Distribution of answer lengths')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":329},"id":"3KsQhdHXin19","executionInfo":{"status":"ok","timestamp":1697964437701,"user_tz":-300,"elapsed":1105,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"9aa31885-4f99-4f57-b5ba-6c8f67d1b14a"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Word cloud for questions and answers\n","from wordcloud import WordCloud\n","\n","wordcloud = WordCloud(width=800, height=400, max_words=100, background_color='white').generate(' '.join(df['questions']))\n","plt.figure(figsize=(10, 5))\n","plt.imshow(wordcloud, interpolation='bilinear')\n","plt.title('Word Cloud for questions')\n","plt.axis('off')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":356},"id":"BZiLwBinkW7U","executionInfo":{"status":"ok","timestamp":1697964560922,"user_tz":-300,"elapsed":3819,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"ba16f41e-cd3f-46bd-958e-d818486db488"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import pandas as pd\n","import re\n","import nltk\n","from nltk.corpus import stopwords\n","\n","\n","\n","# Define a function for text preprocessing\n","def preprocess_text(text):\n","\n","\n","    # Tokenize the text\n","    tokens = text.split()\n","\n","\n","    # Join the tokens back into a text string\n","    preprocessed_text = ' '.join(tokens)\n","\n","    return preprocessed_text\n","\n","# Apply the preprocessing function to both \"Questions\" and \"Answers\" columns\n","df['questions'] = df['questions'].apply(preprocess_text)\n","df['answers'] = df['answers'].apply(preprocess_text)\n","\n","# Print the preprocessed DataFrame\n","print(df.head())\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bPZzGxUHk6MN","executionInfo":{"status":"ok","timestamp":1697964635957,"user_tz":-300,"elapsed":426,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"f452fe06-5f05-4f20-f1a5-ccf0f3e4a467"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["  questions answers  question_Length  answer_Length  question_length  \\\n","0         A       B                1              1                1   \n","1         I       G                1              1                1   \n","2         Y       G                1              1                1   \n","3         D       I                1              1                1   \n","4         I       Y                1              1                1   \n","\n","   answer_length  \n","0              1  \n","1              1  \n","2              1  \n","3              1  \n","4              1  \n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"8O6XJVTflHRM","executionInfo":{"status":"ok","timestamp":1697964657969,"user_tz":-300,"elapsed":401,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"33ad9bb4-4771-4186-9b34-99b4e7433c1e"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      questions answers  question_Length  answer_Length  question_length  \\\n","0             A       B                1              1                1   \n","1             I       G                1              1                1   \n","2             Y       G                1              1                1   \n","3             D       I                1              1                1   \n","4             I       Y                1              1                1   \n","...         ...     ...              ...            ...              ...   \n","91169         I       I                1              1                1   \n","91170         I       T                1              1                1   \n","91171         I       I                1              1                1   \n","91172         W       I                1              1                1   \n","91173         I       I                1              1                1   \n","\n","       answer_length  \n","0                  1  \n","1                  1  \n","2                  1  \n","3                  1  \n","4                  1  \n","...              ...  \n","91169              1  \n","91170              1  \n","91171              1  \n","91172              1  \n","91173              1  \n","\n","[91174 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-b541b225-2088-4bd1-9f09-bb118e79cec0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>questions</th>\n","      <th>answers</th>\n","      <th>question_Length</th>\n","      <th>answer_Length</th>\n","      <th>question_length</th>\n","      <th>answer_length</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A</td>\n","      <td>B</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>I</td>\n","      <td>G</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Y</td>\n","      <td>G</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>D</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>I</td>\n","      <td>Y</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>91169</th>\n","      <td>I</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91170</th>\n","      <td>I</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91171</th>\n","      <td>I</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91172</th>\n","      <td>W</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91173</th>\n","      <td>I</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>91174 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b541b225-2088-4bd1-9f09-bb118e79cec0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b541b225-2088-4bd1-9f09-bb118e79cec0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b541b225-2088-4bd1-9f09-bb118e79cec0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8392c746-2b3d-4426-9553-0709ba082a70\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8392c746-2b3d-4426-9553-0709ba082a70')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8392c746-2b3d-4426-9553-0709ba082a70 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["df['questions'] = df['questions'].apply(preprocess_text)\n","df['answers'] = df['answers'].apply(preprocess_text)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"x5Ff-eYvlIfw","executionInfo":{"status":"ok","timestamp":1697964692435,"user_tz":-300,"elapsed":390,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"45f4a4ba-17d6-40b9-afdf-46139a78ea34"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      questions answers  question_Length  answer_Length  question_length  \\\n","0             A       B                1              1                1   \n","1             I       G                1              1                1   \n","2             Y       G                1              1                1   \n","3             D       I                1              1                1   \n","4             I       Y                1              1                1   \n","...         ...     ...              ...            ...              ...   \n","91169         I       I                1              1                1   \n","91170         I       T                1              1                1   \n","91171         I       I                1              1                1   \n","91172         W       I                1              1                1   \n","91173         I       I                1              1                1   \n","\n","       answer_length  \n","0                  1  \n","1                  1  \n","2                  1  \n","3                  1  \n","4                  1  \n","...              ...  \n","91169              1  \n","91170              1  \n","91171              1  \n","91172              1  \n","91173              1  \n","\n","[91174 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-7747d93d-b506-433b-b234-9707440ce702\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>questions</th>\n","      <th>answers</th>\n","      <th>question_Length</th>\n","      <th>answer_Length</th>\n","      <th>question_length</th>\n","      <th>answer_length</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A</td>\n","      <td>B</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>I</td>\n","      <td>G</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Y</td>\n","      <td>G</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>D</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>I</td>\n","      <td>Y</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>91169</th>\n","      <td>I</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91170</th>\n","      <td>I</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91171</th>\n","      <td>I</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91172</th>\n","      <td>W</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>91173</th>\n","      <td>I</td>\n","      <td>I</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>91174 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7747d93d-b506-433b-b234-9707440ce702')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7747d93d-b506-433b-b234-9707440ce702 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7747d93d-b506-433b-b234-9707440ce702');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dbb887a0-334b-48f3-ad1d-5511eb6d36d6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dbb887a0-334b-48f3-ad1d-5511eb6d36d6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dbb887a0-334b-48f3-ad1d-5511eb6d36d6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","\n","class ChatbotEncoder:\n","    def __init__(self, max_vocab_size, max_seq_length):\n","        self.max_vocab_size = max_vocab_size\n","        self.max_seq_length = max_seq_length\n","        self.tokenizer = Tokenizer(num_words=max_vocab_size, oov_token=\"<OOV>\")\n","\n","    def fit_on_texts(self, texts):\n","        self.tokenizer.fit_on_texts(texts)\n","\n","    def texts_to_sequences(self, texts):\n","        sequences = self.tokenizer.texts_to_sequences(texts)\n","        return pad_sequences(sequences, maxlen=self.max_seq_length, padding='post', truncating='post')\n","\n","    def get_word_index(self):\n","        return self.tokenizer.word_index\n","\n","    def get_vocab_size(self):\n","        return min(self.max_vocab_size, len(self.tokenizer.word_index) + 1)\n","\n","# Example usage:\n","# Initialize the encoder with maximum vocabulary size and maximum sequence length\n","max_vocab_size = 10000\n","max_seq_length = 50\n","encoder = ChatbotEncoder(max_vocab_size, max_seq_length)\n","\n","# Fit the encoder on your preprocessed questions and answers\n","encoder.fit_on_texts(df['questions'])\n","encoder.fit_on_texts(df['answers'])\n","\n","# Get the word index and vocabulary size\n","word_index = encoder.get_word_index()\n","vocab_size = encoder.get_vocab_size()\n","\n","# Convert questions and answers to sequences\n","questions_sequences = encoder.texts_to_sequences(df['questions'])\n","answers_sequences = encoder.texts_to_sequences(df['answers'])\n"],"metadata":{"id":"mT-ZkUDRlWAb","executionInfo":{"status":"ok","timestamp":1697964965190,"user_tz":-300,"elapsed":8350,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","\n","class ChatbotDecoder:\n","    def __init__(self, tokenizer):\n","        self.tokenizer = tokenizer\n","\n","    def sequences_to_texts(self, sequences):\n","        return self.tokenizer.sequences_to_texts(sequences)\n","\n","    def decode_sequence(self, sequence):\n","        decoded_text = self.sequences_to_texts([sequence])[0]\n","        return decoded_text\n","\n","# Example usage:\n","# Initialize the decoder with the same tokenizer used for the encoder\n","decoder = ChatbotDecoder(encoder.tokenizer)\n","\n","# Generate a sample sequence (replace with your model's generated sequence)\n","sample_sequence = [1, 15, 7, 2]  # Example sequence, where numbers represent word indices\n","\n","# Decode the sequence into human-readable text\n","decoded_response = decoder.decode_sequence(sample_sequence)\n","print(\"Generated Response:\", decoded_response)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"knsFv1P_nO3r","executionInfo":{"status":"ok","timestamp":1697965214700,"user_tz":-300,"elapsed":377,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"762cf881-5837-4191-f2e1-574de6b45e64"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Generated Response: <OOV> g n i\n"]}]},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","\n","class ChatbotEncoderDecoder:\n","    def __init__(self, max_vocab_size, max_seq_length):\n","        self.max_vocab_size = max_vocab_size\n","        self.max_seq_length = max_seq_length\n","        self.encoder = self.create_encoder()\n","        self.decoder = self.create_decoder()\n","\n","    def create_encoder(self):\n","        encoder = Tokenizer(num_words=self.max_vocab_size, oov_token=\"<OOV>\")\n","        return encoder\n","\n","    def create_decoder(self):\n","        return ChatbotDecoder(self.encoder)  # Pass the encoder to the decoder\n","\n","    def fit_on_texts(self, questions, answers):\n","        self.encoder.fit_on_texts(questions)\n","        self.encoder.fit_on_texts(answers)\n","\n","    def texts_to_sequences(self, texts, is_question=True):\n","        sequences = self.encoder.texts_to_sequences(texts)\n","        return pad_sequences(sequences, maxlen=self.max_seq_length, padding='post', truncating='post')\n","\n","    def get_word_index(self):\n","        return self.encoder.word_index\n","\n","    def get_vocab_size(self):\n","        return min(self.max_vocab_size, len(self.encoder.word_index) + 1)\n","\n","class ChatbotDecoder:\n","    def __init__(self, encoder):  # Receive the encoder as a parameter\n","        self.encoder = encoder\n","\n","    def sequences_to_texts(self, sequences):\n","        return self.encoder.sequences_to_texts(sequences)  # Use the encoder's method\n","\n","    def decode_sequence(self, sequence):\n","        decoded_text = self.encoder.sequences_to_texts([sequence])[0]  # Use the encoder's method\n","        return decoded_text\n","\n","# Example usage:\n","# Initialize the encoder-decoder with maximum vocabulary size and maximum sequence length\n","max_vocab_size = 10000\n","max_seq_length = 50\n","encoder_decoder = ChatbotEncoderDecoder(max_vocab_size, max_seq_length)\n","\n","# Fit the encoder\n"],"metadata":{"id":"pivqvFFXnWAv","executionInfo":{"status":"ok","timestamp":1697965244105,"user_tz":-300,"elapsed":483,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","\n","class ChatbotDataset:\n","    def __init__(self, dataframe, max_vocab_size, max_seq_length, batch_size):\n","        self.dataframe = dataframe\n","        self.encoder_decoder = ChatbotEncoderDecoder(max_vocab_size, max_seq_length)\n","        self.batch_size = batch_size\n","\n","    def preprocess_dataframe(self):\n","        # Preprocess questions and answers\n","        questions = self.dataframe['questions'].tolist()\n","        answers = self.dataframe['answers'].tolist()\n","\n","        # Fit the encoder-decoder on questions and answers\n","        self.encoder_decoder.fit_on_texts(questions, answers)\n","\n","        # Convert questions and answers to sequences\n","        questions_sequences = self.encoder_decoder.texts_to_sequences(questions, is_question=True)\n","        answers_sequences = self.encoder_decoder.texts_to_sequences(answers, is_question=False)\n","\n","        # Split the data into training and validation sets\n","        train_questions, val_questions, train_answers, val_answers = train_test_split(\n","            questions_sequences, answers_sequences, test_size=0.2, random_state=42\n","        )\n","\n","        # Create TensorFlow Datasets\n","        self.train_dataset = self.create_dataset(train_questions, train_answers)\n","        self.val_dataset = self.create_dataset(val_questions, val_answers)\n","\n","    def create_dataset(self, questions, answers):\n","        dataset = tf.data.Dataset.from_tensor_slices((questions, answers))\n","        dataset = dataset.shuffle(len(questions))\n","        dataset = dataset.batch(self.batch_size)\n","        return dataset\n","\n","    def get_train_dataset(self):\n","        return self.train_dataset\n","\n","    def get_val_dataset(self):\n","        return self.val_dataset\n","\n","# Example usage:\n","# Load your DataFrame\n","# df = pd.read_csv('your_dataset.csv')\n","\n","# Initialize the dataset with maximum vocabulary size, maximum sequence length, and batch size\n","max_vocab_size = 10000\n","max_seq_length = 50\n","batch_size = 64\n","chatbot_data = ChatbotDataset(df, max_vocab_size, max_seq_length, batch_size)\n","\n","# Preprocess the DataFrame and create training and validation datasets\n","chatbot_data.preprocess_dataframe()\n","\n","# Get the training and validation datasets\n","train_dataset = chatbot_data.get_train_dataset()\n","val_dataset = chatbot_data.get_val_dataset()\n","\n","# Iterate through batches in the training dataset\n","for batch in train_dataset:\n","    questions, answers = batch\n","    # Your training logic here\n"],"metadata":{"id":"K4Ees7XJnrHF","executionInfo":{"status":"ok","timestamp":1697965351991,"user_tz":-300,"elapsed":12021,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["import json\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","\n","# Load the JSON data from the file\n","json_file_path = '///content/Topical-Chat/conversations/train.json'  # Replace with the actual file path\n","with open(json_file_path, 'r') as file:\n","    data = json.load(file)\n","\n","# Convert the JSON data into a DataFrame\n","df = pd.DataFrame(data)\n","\n","# If you have a very small dataset, consider using a larger portion for training\n","# Adjust test_size as needed, but ensure it's less than 1.0\n","train_df, test_df = train_test_split(df, test_size=0.2, random_state=42)  # Adjust test_size as needed\n","\n","# Now, you have train_df and test_df for your training and test sets\n"],"metadata":{"id":"mHvJ2uGvn98Z","executionInfo":{"status":"ok","timestamp":1697965472532,"user_tz":-300,"elapsed":2926,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["!pip install torch pandas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rtRAyyANoV4-","executionInfo":{"status":"ok","timestamp":1697965515478,"user_tz":-300,"elapsed":13516,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"2915bddb-11a3-4ac9-e07f-c8ebff68c554"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.1.0+cu118)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch) (3.12.4)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch) (1.12)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.2)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch) (2023.6.0)\n","Requirement already satisfied: triton==2.1.0 in /usr/local/lib/python3.10/dist-packages (from torch) (2.1.0)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.3.post1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.23.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch) (2.1.3)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch) (1.3.0)\n"]}]},{"cell_type":"code","source":["import json\n","import pandas as pd\n","\n","# Load the JSON data from the file\n","json_file_path = '/content/Topical-Chat/conversations/train.json'  # Replace with the actual file path\n","with open(json_file_path, 'r') as file:\n","    data = json.load(file)\n","\n","# Convert the JSON data into a DataFrame\n","df = pd.DataFrame(data)\n"],"metadata":{"id":"QobkKzAFogCt","executionInfo":{"status":"ok","timestamp":1697965593781,"user_tz":-300,"elapsed":3682,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["from torch.utils.data import Dataset\n","\n","class ChatbotDataset(Dataset):\n","    def __init__(self, dataframe):\n","        self.data = dataframe\n","\n","    def __len__(self):\n","        return len(self.data)\n","\n","    def __getitem__(self, idx):\n","        # Implement logic to return a single data sample\n","        # For example, return a tuple containing input and target tensors\n","        # Make sure to preprocess the data appropriately\n","        sample = {\n","            'input': input_tensor,\n","            'target': target_tensor\n","        }\n","        return sample\n"],"metadata":{"id":"B-fc3Nyqoyao","executionInfo":{"status":"ok","timestamp":1697965642626,"user_tz":-300,"elapsed":12,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["chatbot_dataset = ChatbotDataset(df)\n"],"metadata":{"id":"UOsx_-MWo89F","executionInfo":{"status":"ok","timestamp":1697965662582,"user_tz":-300,"elapsed":399,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["from torch.utils.data import DataLoader\n","\n","batch_size = 32  # Adjust the batch size as needed\n","train_dataloader = DataLoader(chatbot_dataset, batch_size=batch_size, shuffle=True)\n"],"metadata":{"id":"uQ0q1FzzpFRF","executionInfo":{"status":"ok","timestamp":1697965706898,"user_tz":-300,"elapsed":399,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["from torch.utils.data.dataset import random_split\n","\n","# Define the sizes for train, validation, and test sets\n","train_size = int(0.8 * len(chatbot_dataset))\n","val_size = int(0.1 * len(chatbot_dataset))\n","test_size = len(chatbot_dataset) - train_size - val_size\n","\n","# Split the dataset\n","train_dataset, val_dataset, test_dataset = random_split(chatbot_dataset, [train_size, val_size, test_size])\n"],"metadata":{"id":"bt5HDBrlpL4B","executionInfo":{"status":"ok","timestamp":1697965723541,"user_tz":-300,"elapsed":380,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["# Create data loaders for each set\n","train_dataloader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)\n","print(train_dataloader)\n","val_dataloader = DataLoader(val_dataset, batch_size=batch_size)\n","test_dataloader = DataLoader(test_dataset, batch_size=batch_size)\n","\n","# You can now use train_dataloader, val_dataloader, and test_dataloader for training, validation, and testing.\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7NoSu0cupbiJ","executionInfo":{"status":"ok","timestamp":1697965788077,"user_tz":-300,"elapsed":477,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"7b4993ab-15f4-4a39-ae31-c516cf6eed99"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["<torch.utils.data.dataloader.DataLoader object at 0x78559b8b8670>\n"]}]},{"cell_type":"code","source":["from torch.utils.data.dataset import random_split\n","from torch.utils.data import DataLoader\n","\n","# Define the sizes for train, validation, and test sets\n","train_size = int(0.8 * len(chatbot_dataset))\n","val_size = int(0.1 * len(chatbot_dataset))\n","test_size = len(chatbot_dataset) - train_size - val_size\n","\n","# Split the dataset\n","train_dataset, val_dataset, test_dataset = random_split(chatbot_dataset, [train_size, val_size, test_size])\n","\n","# Define batch size\n","batch_size = 32  # You can adjust the batch size as needed\n","\n","# Create data loaders for each set\n","train_dataloader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)\n","val_dataloader = DataLoader(val_dataset, batch_size=batch_size)\n","test_dataloader = DataLoader(test_dataset, batch_size=batch_size)\n","\n","# You can now use train_dataloader, val_dataloader, and test_dataloader for training, validation, and testing.\n","print(train_dataloader)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KKceQVnRpiOT","executionInfo":{"status":"ok","timestamp":1697965848737,"user_tz":-300,"elapsed":367,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"04737bb7-a972-4a8a-e16f-900b64983532"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["<torch.utils.data.dataloader.DataLoader object at 0x78559906c160>\n"]}]},{"cell_type":"code","source":["from transformers import GPT2LMHeadModel, GPT2Tokenizer\n","\n","model_name = \"gpt2\"  # Choose the model name that suits your task\n","tokenizer = GPT2Tokenizer.from_pretrained(model_name)\n","model = GPT2LMHeadModel.from_pretrained(model_name)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":377,"referenced_widgets":["e63e5ccf44f9464098c924e2458a05d7","8bde7c0bf8b54286abecf05a1899208d","02588b85f80a4e778df5cb865c9477e3","a7ab9fb987a24fac98d25aa5b37e04ca","b806acd08e0e4356ad7bcc8873f0a72d","46543df4992b4319a22ab890bc4c6ea8","655e3d001fbf44608ef3a4993ea21216","cd90dd51ff544cdc9651af9e4ce74927","950db1911a9f48acbb84c30176d86ab5","b36e7a24dcc34cb3a11cee11bfeb6d80","0c0ba6872d1f44bfa19b634d080ebd52","be365b719e26443fab901246e476dcaf","38505f3ae8cd41959ebd3f8245d0ca3a","5de38c559d8248ecb99a84909927261c","ee969e27da03468694133a0c24ebb837","ce44ac22669743b0bc5bcb2115efc7c3","7121478315364514a6adb3909ee76abb","d1674a57d0ca4b0a81f3748ff5add171","e41d452cbcbc4bf99b8d0a01227e2c15","d9d64c3b7e054451be5fadbd32d0540e","cc7f5db1e0a54127b5815033cc1bc992","32344eacda2549c49e2328815dce8bb5","11587ea7793e4d65b74a0a0ff5be90e9","9245859e5c3f4580a92c61fc927a6560","8cfda3de32d3408590fbe1c5250b971b","b0414dc0f8cd404c984830654bdcb532","522b6d89dec74682894a403d809604cc","498fce73e6a240fc927982e8bcc8af38","c42f38096dec4a41a50f180ea9f7fb8a","5612920f1d2e4a8c97acb6bbd6ed4490","7b9e366caff94fe89cdd8cc47a93d924","c026e61d9d824a6184b7590247232054","a122dc499be948a5ba94707c8a2c4e56","22bc6c826bc3479aa9f54381e450e9ac","a0556cd1931c418ba0ce5b2865766ff3","e6540346d3f14df2b93c645826216aae","623f6fdeb7e645debc92011866e9daa8","5d99c1e2d43f4224b6cb4c13517daaf2","9a51ea57cfc04816887e83d69ef97b40","d0dc044189da4cd59482d553b47f4a35","5315a3ce5627441bbfb2b65e359d7bf6","e333333e016e4e65b2e59f982dbade93","3e68956902494036b9cee8452ef5ea2b","ac0f0b8213954bb5878d2e3bd65ac468","67d36e64e1974916ba27194d6601d598","a39deda31ab44c4bb8e87ff36d28bdc9","3b64efb50c4041e989d1e59a407772eb","bcbc9523fdfd43509e154f59e16acfdd","f5f5e752fc5b4db7b4658b0b5fb48a0f","fe7baeb17654475d9e2a97704e46b8d3","ca584ef3f42e49be9dbe69ab562a6a41","28e643db2be941c0a07932b497986951","32c3da73206a4956bb0aa64f1b797a29","783e27a488cf4093ba787fac77a0d357","818c3e7410a04d089496a1fbf809cf26","54dba006d0d740e19973748753794993","63cdb891f6db4037826773263f71ad17","1e4c845c32864464a425f29302908e0f","0860af99591d4d36a94a6bf0be7103b5","1402dca26fa247ae94418eb6a333a064","c53c7938a6ea4e2d837b8de1c58eee61","2bc1855365f34ce084a2e2b43878662b","a258152669984fbb8a0a98495c9ee76c","5649162a1be04e9bbe5b02cd0b6a7cab","606a46f66e8740f2880e11ea040fb523","9e34bb0e99074722beccddd9735447f0"]},"id":"u1yaDBq7pzSY","executionInfo":{"status":"ok","timestamp":1697965900900,"user_tz":-300,"elapsed":16366,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"f780c8c4-fb22-470d-9625-ba92b79a1b0a"},"execution_count":56,"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading (…)olve/main/vocab.json:   0%|          | 0.00/1.04M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e63e5ccf44f9464098c924e2458a05d7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)olve/main/merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"be365b719e26443fab901246e476dcaf"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)/main/tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"11587ea7793e4d65b74a0a0ff5be90e9"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)lve/main/config.json:   0%|          | 0.00/665 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"22bc6c826bc3479aa9f54381e450e9ac"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading model.safetensors:   0%|          | 0.00/548M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"67d36e64e1974916ba27194d6601d598"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)neration_config.json:   0%|          | 0.00/124 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"54dba006d0d740e19973748753794993"}},"metadata":{}}]},{"cell_type":"code","source":["\n","import torch\n","from torch.utils.data import DataLoader, Dataset\n","from transformers import GPT2LMHeadModel, GPT2Tokenizer, AdamW, get_linear_schedule_with_warmup\n","\n","# Define your dataset class (you may need to modify this to match your data format)\n","class ChatbotDataset(Dataset):\n","    def __init__(self, questions, answers, tokenizer, max_length=128):\n","        self.questions = questions\n","        self.answers = answers\n","        self.tokenizer = tokenizer\n","        self.max_length = max_length\n","\n","    def __len__(self):\n","        return len(self.questions)\n","\n","    def __getitem__(self, idx):\n","        input_text = self.questions[idx]\n","        target_text = self.answers[idx]\n","\n","        inputs = self.tokenizer.encode(input_text, truncation=True, max_length=self.max_length, padding='max_length')\n","        targets = self.tokenizer.encode(target_text, truncation=True, max_length=self.max_length, padding='max_length')\n","\n","        return {\n","            'input_ids': torch.tensor(inputs, dtype=torch.long),\n","            'attention_mask': torch.tensor([1] * len(inputs), dtype=torch.long),\n","            'labels': torch.tensor(targets, dtype=torch.long),\n","        }\n","\n","# Define your training data and tokenizer\n","train_questions = [\"Are you a fan of Google or Microsoft?\"]  # List of training questions\n","train_answers = [\"Both are excellent technology they are helpful.\"]    # List of corresponding answers\n","tokenizer = GPT2Tokenizer.from_pretrained('gpt2', pad_token='<pad>')\n"],"metadata":{"id":"uf-Gesk2p8Rh","executionInfo":{"status":"ok","timestamp":1697965923886,"user_tz":-300,"elapsed":1012,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["\n","# Create the dataset and dataloader\n","batch_size = 8  # Adjust as needed\n","dataset = ChatbotDataset(train_questions, train_answers, tokenizer)\n","dataloader = DataLoader(dataset, batch_size=batch_size, shuffle=True)\n"],"metadata":{"id":"SOEfx6nzqHyX","executionInfo":{"status":"ok","timestamp":1697965969552,"user_tz":-300,"elapsed":388,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["# Load the pre-trained GPT-2 model\n","model = GPT2LMHeadModel.from_pretrained('gpt2')\n"],"metadata":{"id":"oGgggOHuqMMh","executionInfo":{"status":"ok","timestamp":1697965993656,"user_tz":-300,"elapsed":6974,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["from transformers import AdamW, get_linear_schedule_with_warmup\n","import torch\n","\n","# Define the number of training epochs\n","num_epochs = 3  # Adjust as needed\n","\n","# Set up training configurations\n","optimizer = AdamW(model.parameters(), lr=2e-5)\n","scheduler = get_linear_schedule_with_warmup(optimizer, num_warmup_steps=0, num_training_steps=len(dataloader) * num_epochs)\n","\n","# Now, you can use the 'num_epochs' variable in your training loop\n","# for epoch in range(num_epochs):\n","#     # Your training loop code here"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KYNcNdd7qTDE","executionInfo":{"status":"ok","timestamp":1697966016541,"user_tz":-300,"elapsed":985,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"c6db8b4c-f5f9-4443-bb4a-a35f26241fc7"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:411: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["\n","import torch\n","import torch.nn as nn\n","from torch.utils.data import DataLoader\n","\n","train_dataloader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)\n","print(train_dataloader)\n","val_dataloader = DataLoader(val_dataset, batch_size=batch_size)\n","test_dataloader = DataLoader(test_dataset, batch_size=batch_size)\n","# Define your DataLoader (train_dataloader in this example)\n","# Adjust batch size, number of epochs, etc., as needed\n","batch_size = 32\n","num_epochs = 10\n","\n","# Training loop\n","for epoch in range(num_epochs):\n","    total_loss = 0.0\n","\n","    # Print the average loss for this epoch\n","    avg_loss = total_loss / len(train_dataloader)\n","    print(f\"Epoch [{epoch + 1}/{num_epochs}] - Loss: {avg_loss:.4f}\")\n","\n","# Save the trained model\n","torch.save(model.state_dict(), 'your_model.pth')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YQt4WNlKqaoH","executionInfo":{"status":"ok","timestamp":1697966050904,"user_tz":-300,"elapsed":3937,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"50098513-0aab-4480-f6cc-7d9255ff22ac"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["<torch.utils.data.dataloader.DataLoader object at 0x78559f593370>\n","Epoch [1/10] - Loss: 0.0000\n","Epoch [2/10] - Loss: 0.0000\n","Epoch [3/10] - Loss: 0.0000\n","Epoch [4/10] - Loss: 0.0000\n","Epoch [5/10] - Loss: 0.0000\n","Epoch [6/10] - Loss: 0.0000\n","Epoch [7/10] - Loss: 0.0000\n","Epoch [8/10] - Loss: 0.0000\n","Epoch [9/10] - Loss: 0.0000\n","Epoch [10/10] - Loss: 0.0000\n"]}]},{"cell_type":"code","source":["import torch\n","from transformers import GPT2LMHeadModel, GPT2Tokenizer\n","\n","# Load pre-trained model and tokenizer\n","model_name = \"gpt2\"  # You can specify other GPT-2 variants\n","model = GPT2LMHeadModel.from_pretrained(model_name)\n","tokenizer = GPT2Tokenizer.from_pretrained(model_name)\n","\n","# Function to generate a response\n","def generate_response(prompt_text, max_length=50):\n","    input_ids = tokenizer.encode(prompt_text, return_tensors=\"pt\")\n","    attention_mask = torch.ones(input_ids.shape, dtype=input_ids.dtype)\n","    with torch.no_grad():\n","        output = model.generate(input_ids, attention_mask=attention_mask, pad_token_id=50256, max_length=max_length, num_return_sequences=1)\n","    generated_text = tokenizer.decode(output[0], skip_special_tokens=True)\n","    return generated_text\n","\n","# Example usage:\n","prompt = \"Are you a fan of Google or Microsoft?\"\n","response = generate_response(prompt)\n","print(\"Generated Response:\", response)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VqkXUc27qpLn","executionInfo":{"status":"ok","timestamp":1697966118935,"user_tz":-300,"elapsed":12477,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"ed246096-e251-496b-d816-c797d406b936"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["Generated Response: Are you a fan of Google or Microsoft?\n","\n","I'm a fan of Google or Microsoft. I'm a fan of Google. I'm a fan of Google. I'm a fan of Google. I'm a fan of Google. I'm\n"]}]},{"cell_type":"code","source":["import nltk\n","from nltk.translate.bleu_score import sentence_bleu, corpus_bleu\n","\n","# Download the 'punkt' tokenizer models\n","nltk.download('punkt')\n","\n","# Reference sentences (ground truth)\n","reference = [\"I'm a fan of Google or Microsoft.\"]\n","# Generated response\n","generated_response = \"I'm a fan of Google or Microsoft.\"\n","\n","# Tokenize reference and generated sentences\n","reference_tokens = [nltk.word_tokenize(ref.lower()) for ref in reference]\n","generated_tokens = nltk.word_tokenize(generated_response.lower())\n","\n","# Calculate BLEU score for a single sentence\n","bleu_score = sentence_bleu(reference_tokens, generated_tokens)\n","\n","print(\"BLEU Score (Sentence):\", bleu_score)\n","\n","# Calculate BLEU score for a corpus (multiple sentences)\n","corpus_bleu_score = corpus_bleu(reference_tokens, [generated_tokens])\n","\n","print(\"BLEU Score (Corpus):\", corpus_bleu_score)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OQjA1bvmq0Hk","executionInfo":{"status":"ok","timestamp":1697966151420,"user_tz":-300,"elapsed":399,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}},"outputId":"dec24498-9937-4695-808e-ab6da6f8f620"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["BLEU Score (Sentence): 1.0\n","BLEU Score (Corpus): 1.384292958842266e-231\n"]},{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","/usr/local/lib/python3.10/dist-packages/nltk/translate/bleu_score.py:552: UserWarning: \n","The hypothesis contains 0 counts of 2-gram overlaps.\n","Therefore the BLEU score evaluates to 0, independently of\n","how many N-gram overlaps of lower order it contains.\n","Consider using lower n-gram order or use SmoothingFunction()\n","  warnings.warn(_msg)\n","/usr/local/lib/python3.10/dist-packages/nltk/translate/bleu_score.py:552: UserWarning: \n","The hypothesis contains 0 counts of 3-gram overlaps.\n","Therefore the BLEU score evaluates to 0, independently of\n","how many N-gram overlaps of lower order it contains.\n","Consider using lower n-gram order or use SmoothingFunction()\n","  warnings.warn(_msg)\n","/usr/local/lib/python3.10/dist-packages/nltk/translate/bleu_score.py:552: UserWarning: \n","The hypothesis contains 0 counts of 4-gram overlaps.\n","Therefore the BLEU score evaluates to 0, independently of\n","how many N-gram overlaps of lower order it contains.\n","Consider using lower n-gram order or use SmoothingFunction()\n","  warnings.warn(_msg)\n"]}]},{"cell_type":"code","source":["import torch\n","\n","def generate_response(user_input, max_length=50):\n","    # Tokenize the user's input\n","    input_ids = tokenizer.encode(user_input, return_tensors='pt')\n","\n","    # Generate a response\n","    with torch.no_grad():\n","        response_ids = model.generate(input_ids, max_length=max_length, num_return_sequences=1)\n","\n","    # Decode the response\n","    generated_response = tokenizer.decode(response_ids[0], skip_special_tokens=True)\n","\n","    return generated_response\n"],"metadata":{"id":"BsV1FbMiqa0f","executionInfo":{"status":"ok","timestamp":1697966176816,"user_tz":-300,"elapsed":414,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["def generate_response(prompt_text, max_length=50):\n","    input_ids = tokenizer.encode(prompt_text, return_tensors=\"pt\")\n","    attention_mask = torch.ones(input_ids.shape, dtype=torch.long)\n","\n","    with torch.no_grad():\n","        output = model.generate(input_ids, attention_mask=attention_mask, pad_token_id=tokenizer.eos_token_id, max_length=max_length, num_return_sequences=1)\n","\n","    generated_text = tokenizer.decode(output[0], skip_special_tokens=True)\n","    return generated_text"],"metadata":{"id":"sogHjeySrAbI","executionInfo":{"status":"ok","timestamp":1697966214697,"user_tz":-300,"elapsed":400,"user":{"displayName":"Rida Zehra","userId":"04362398215956415855"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["while True:\n","    user_input = input(\"You: \")\n","    if user_input.lower() == 'exit':\n","        break\n","\n","    response = generate_response(user_input)\n","    print(\"Chatbot:\", response)\n"],"metadata":{"id":"yFNhC_uprL9q"},"execution_count":null,"outputs":[]}]}